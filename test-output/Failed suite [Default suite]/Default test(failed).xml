<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="0" hostname="DESKTOP-7PKD45A" failures="0" tests="2" name="Default test(failed)" time="0.074" errors="0" timestamp="2024-09-05T11:01:39 IST">
  <testcase classname="com.mystore.testcase.IndexPageTest" name="@BeforeMethod setup" time="-1.725514299262E9">
    <failure type="org.testng.TestNGException" message="
Can inject only one of &amp;lt;ITestContext, XmlTest, Method, Object[], ITestResult&amp;gt; into a @BeforeMethod annotated setup.
For more information on native dependency injection please refer to https://testng.org/doc/documentation-main.html#native-dependency-injection">
      <![CDATA[org.testng.TestNGException: 
Can inject only one of <ITestContext, XmlTest, Method, Object[], ITestResult> into a @BeforeMethod annotated setup.
For more information on native dependency injection please refer to https://testng.org/doc/documentation-main.html#native-dependency-injection
at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
... Removed 28 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="com.mystore.testcase.IndexPageTest" name="@AfterMethod tearDown" time="-1.72551429928E9">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="com.mystore.testcase.IndexPageTest" name="@BeforeMethod setup" time="-1.725514299283E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="com.mystore.testcase.IndexPageTest" name="@AfterMethod tearDown" time="-1.72551429929E9">
    <skipped/>
  </testcase> <!-- @AfterMethod tearDown -->
  <testcase classname="com.mystore.testcase.IndexPageTest" name="verifyLogo" time="0.0">
    <skipped/>
  </testcase> <!-- verifyLogo -->
  <testcase classname="com.mystore.testcase.IndexPageTest" name="verifyTitle" time="0.0">
    <skipped/>
  </testcase> <!-- verifyTitle -->
</testsuite> <!-- Default test(failed) -->
